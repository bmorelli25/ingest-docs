== 3. Schema modification on collected data


* 3. When you want to modify the schema for collected data 
** It is often necessary to modify the schema of collected data to make it more meaningful during analysis. A few examples include parsing additional fields from the collected data, normalizing attributes by renaming fields, creating a new field based on values of existing ones, and enriching documents with metadata (such as host/container metadata) or referential data (such as Threat intelligence feeds) 

* 3a. For all of the above use cases, the Runtime Fields feature is available to add new fields derived from collected data, after ingestion, through the Kibana based runtime field UX. Once you validate that you can use these newly created fields in Discover queries or dashboards or within any kibana analytics assets, for better query performance on these fields, you can index them following these docs. 
* Created a docs issue for “How to” on runtime fields for schema evolution
* Show the associated architecture with visuals on where the data transformation/enrichment is taking place 

* 3b.  When there are specific transformation needs such as extracting text from file attachments, approximate circle definitions using polygons, or performing inference using pre-trained models, data can be transformed at ingestion time with Ingest Pipelines.
** If you are using an existing integration then you can modify the pipeline associated with that integration. starting 8.4, you can specify additional pipeline that won’t get overwritten after integration upgrade.
** One caveat of this approach is if there is a mapping conflict e.g. changing datatype of an existing field, you may need to reindex data
** TODO: compare runtime fields and ingest processors functionality to help decide when to move from runtime fields to ingest pipelines
** Show the associated architecture with visuals that data transformation/enrichment is taking place in ingest nodes within elasticsearch

* 3c.  Third way to modify the schema on collected data, by adding, removing fields is via processors in Agent. We recommend this option only if you need to filter out fields from documents at the edge <- point to docs if they exist, if not show screenshot of the integrations UI -> system integration, with the list of processors we support->
** Show the associated architecture with visuals that some transformation/enrichment is taking place on agent processors on edge.  

